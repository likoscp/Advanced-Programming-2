services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy

  auth:
    build: ./auth
    ports:
      - "50051:50051"
      - "8083:8083"
    env_file:
      - ./auth/.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/metrics" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=comics
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d comics" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pg.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5055:80"
    depends_on:
      db:
        condition: service_healthy
  comics-service:
    build:
      context: ./comics
      args:
        - MY_ENV_VAR
    ports:
      - "8088:8088"
    depends_on:
      - nats
      - db
    env_file:
      - ./comics/.env
  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/migrations/:/migrations
    command: [ "-path", "/migrations/", "-database", "postgres://admin:admin@db:5432/comics?sslmode=disable", "up" ]
  migrate-comicsdb:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./comics/migrations/:/migrations
    command: [ "-path", "/migrations/", "-database", "postgres://admin:admin@db:5432/comicsdb?sslmode=disable", "up" ]

  email-service:
    build: ./email-service
    ports:
      - "8082:8082"
    env_file:
      - ./email-service/.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/metrics" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
  redis:
    image: redis
    ports:
      - "6379:6379"
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      email-service:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    env_file:
      - ./email-service/.env
    depends_on:
      - prometheus
volumes:
  minio-data:
